import Head from 'next/head'
import { useComponents } from '../components/useComponent'
import md5 from 'crypto-js/md5'
import useHome from '../hooks'
import { trackPromise, usePromiseTracker } from 'react-promise-tracker'

export default function Home({ results }) {
  const { comics, Heros, getCommicByHero, getComisSearch, handleSearch } =
    useHome({
      results,
    })
  const { Homelayout, CardComic, Button, SpinLoader, InputSearch } =
    useComponents()
  const { promiseInProgress } = usePromiseTracker()

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Homelayout>
        <main className="container mx-auto pt-4 md:pt-20 px-8 max-w-7xl">
          <div className="my-8">
            <form onSubmit={handleSearch}>
              <InputSearch onChange={getComisSearch} />
            </form>
          </div>
          <div className="md:flex flex-wrap md:flex-nowrap mb-8 md:space-x-8 grid grid-cols-2 gap-4 md:px-2">
            {Heros.map((h) => (
              <Button
                key={h.id}
                label={h.label}
                onClick={() => getCommicByHero(h.label)}
              />
            ))}
          </div>
          <div className="flex flex-wrap pb-10 -mx-6">
            {promiseInProgress ? (
              <SpinLoader />
            ) : (
              comics.map((c) => (
                <CardComic
                  key={c.id}
                  id={c.id}
                  title={c.title}
                  thumbnail={c.thumbnail}
                  description={c.creators.items
                    .filter((p) => p.role === 'writer')
                    .map((w) => w.name)
                    .join(', ')}
                  price={
                    c.prices.filter((p) => p.type === 'printPrice')[0].price
                  }
                />
              ))
            )}
          </div>
        </main>
      </Homelayout>
    </>
  )
}

export async function getServerSideProps(context) {
  const ts = Date.now()
  const apiKey = process.env.NEXT_PUBLIC_API_KEY
  const baseUrl = process.env.NEXT_PUBLIC_API_URL
  const key = 'c107abeeb9b8155ed6961548160c3783db481e87'
  const hash = md5(ts + key + apiKey)
  const res = await fetch(
    `${baseUrl}/comics?ts=${ts}&hash=${hash}&format=comic&limit=20&apikey=${apiKey}`
  )
  const { data } = await res.json()
  console.log({ data })
  const { results } = data

  return {
    props: { results },
  }
}
